{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/Notification/Notification.module.css","components/Heading/Heading.module.css","components/Section/Section.module.css","components/ContactList/ContactList.module.css","animation/fadeContactList.module.css","animation/fadeNotification.module.css","animation/fadeFilter.module.css","animation/fadeHeading.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsSelectors.js","components/Filter/FilterTypes.js","components/Filter/Filter.js","components/Heading/Heading.js","components/Section/SectionTypes.js","components/Section/Section.js","components/ContactList/ContactListTypes.js","redux/contacts/contactsOperations.js","components/ContactListItem/ContactListItemTypes.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactFormTypes.js","components/Notification/Notification.js","components/ContactForm/ContactForm.js","components/App/AppTypes.js","components/App/App.js","redux/contacts/handleContactsReducer.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsFailure","addContactRequest","addContactSuccess","addContactFailure","removeContactRequest","removeContactSuccess","removeContactFailure","changeFilter","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","name","toLowerCase","includes","getContactById","contactId","find","id","PropTypes","string","isRequired","func","arrayOf","shape","number","mapDispatchToProps","onChangeFilter","contactsActions","connect","value","contactsSelectors","length","className","styles","filterWrapper","input","type","autoComplete","onChange","e","target","Heading","heading","node","Section","children","section","axios","defaults","baseURL","fetchContacts","dispatch","get","then","data","catch","error","addContacts","post","removeContact","delete","onRemove","contactsOperations","listItem","contact","button","onClick","TransitionGroup","component","list","map","CSSTransition","key","timeout","classNames","fadeContactList","Notification","notificationWrapper","text","ContactForm","isNotice","setNotificationTimeout","delay","setTimeout","setState","handleChange","handleFormSubmit","preventDefault","props","onAddContact","Number","this","in","fadeNotification","unmountOnExit","form","onSubmit","autoFocus","Component","App","onFetchContacts","fadeHeading","appear","fadeFilter","payload","createReducer","handleContactsReducer","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.568ed44f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2XMRO\",\"input\":\"ContactForm_input__3u-cS\",\"button\":\"ContactForm_button__ykPzp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__evgrh\",\"contact\":\"ContactListItem_contact__3b1NE\",\"button\":\"ContactListItem_button__1xnym\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__14YIU\",\"input\":\"Filter_input__SwNjm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationWrapper\":\"Notification_notificationWrapper__10S6W\",\"text\":\"Notification_text__3Vg6R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Heading_heading__2NRpN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2utxC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1-CoO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeContactList_enter__2eSoP\",\"enterActive\":\"fadeContactList_enterActive__2Isxy\",\"exit\":\"fadeContactList_exit__KPcN6\",\"exitActive\":\"fadeContactList_exitActive__3fHP5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeNotification_enter__2Qx4O\",\"enterActive\":\"fadeNotification_enterActive__2Ky8k\",\"exit\":\"fadeNotification_exit__hTu-N\",\"exitActive\":\"fadeNotification_exitActive__2fWmo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeFilter_enter__PRrfN\",\"enterActive\":\"fadeFilter_enterActive__20Cxp\",\"exit\":\"fadeFilter_exit__R-J0P\",\"exitActive\":\"fadeFilter_exitActive__1Th8D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"fadeHeading_appear__1Tghu\",\"appearActive\":\"fadeHeading_appearActive__ihc4A\"};","//Core\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchSuccess');\r\nconst fetchContactsFailure = createAction('contacts/fetchFailure');\r\n\r\nconst addContactRequest = createAction('contacts/addRequest');\r\nconst addContactSuccess = createAction('contacts/addSuccess');\r\nconst addContactFailure = createAction('contacts/addFailure');\r\n\r\nconst removeContactRequest = createAction('contacts/removeRequest');\r\nconst removeContactSuccess = createAction('contacts/removeSuccess');\r\nconst removeContactFailure = createAction('contacts/removeFailure');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nexport default {\r\n\tfetchContactsRequest,\r\n\tfetchContactsSuccess,\r\n\tfetchContactsFailure,\r\n\r\n\taddContactRequest,\r\n\taddContactSuccess,\r\n\taddContactFailure,\r\n\r\n\tremoveContactRequest,\r\n\tremoveContactSuccess,\r\n\tremoveContactFailure,\r\n\r\n\tchangeFilter,\r\n};\r\n","//Core\r\nimport { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.items;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getContactId = (state, contactId) => contactId;\r\n\r\nconst getVisibleContacts = createSelector(\r\n\t[getContacts, getFilter],\r\n\t(contacts, filter) =>\r\n\t\tcontacts.filter(({ name }) =>\r\n\t\t\tname.toLowerCase().includes(filter.toLowerCase()),\r\n\t\t),\r\n);\r\n\r\nconst getContactById = createSelector(\r\n\t[getContactId, getContacts],\r\n\t(contactId, contacts) => contacts.find(({ id }) => id === contactId),\r\n);\r\n\r\nexport default {\r\n\tgetContacts,\r\n\tgetFilter,\r\n\tgetVisibleContacts,\r\n\tgetContactById,\r\n};\r\n","//Core\r\nimport PropTypes from 'prop-types';\r\n\r\nconst filterTypes = {\r\n\tvalue: PropTypes.string.isRequired,\r\n\r\n\tonChangeFilter: PropTypes.func.isRequired,\r\n\r\n\tcontacts: PropTypes.arrayOf(\r\n\t\tPropTypes.shape({\r\n\t\t\tid: PropTypes.number.isRequired,\r\n\t\t\tname: PropTypes.string.isRequired,\r\n\t\t\tnumber: PropTypes.number.isRequired,\r\n\t\t}).isRequired,\r\n\t).isRequired,\r\n};\r\n\r\nexport default filterTypes;\r\n","//Core\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n//Redux\r\nimport contactsActions from 'redux/contacts/contactsActions';\r\nimport contactsSelectors from 'redux/contacts/contactsSelectors';\r\n//Types\r\nimport filterTypes from './FilterTypes';\r\n//Styles\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, contacts, onChangeFilter }) =>\r\n\tcontacts.length > 1 && (\r\n\t\t<div className={styles.filterWrapper}>\r\n\t\t\t<label>\r\n\t\t\t\tFind contacts by name\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={styles.input}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={e => onChangeFilter(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t);\r\n\r\nFilter.propTypes = filterTypes;\r\n\r\nconst mapStateToProps = state => ({\r\n\tvalue: contactsSelectors.getFilter(state),\r\n\tcontacts: contactsSelectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n\tonChangeFilter: contactsActions.changeFilter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","//Core\r\nimport React from 'react';\r\n//Styles\r\nimport styles from './Heading.module.css';\r\n\r\nconst Heading = () => <h1 className={styles.heading}>Phonebook</h1>;\r\n\r\nexport default Heading;\r\n","//Core\r\nimport PropTypes from 'prop-types';\r\n\r\nconst sectionTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default sectionTypes;\r\n","//Core\r\nimport React from 'react';\r\n//Types\r\nimport sectionTypes from './SectionTypes';\r\n//Styles\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ children }) => <section className={styles.section}>{children}</section>;\r\n\r\nSection.propTypes = sectionTypes;\r\n\r\nexport default Section;\r\n","//Core\r\nimport PropTypes from 'prop-types';\r\n\r\nconst contactListTypes = {\r\n\tcontacts: PropTypes.arrayOf(\r\n\t\tPropTypes.shape({\r\n\t\t\tid: PropTypes.number.isRequired,\r\n\t\t\tname: PropTypes.string.isRequired,\r\n\t\t\tnumber: PropTypes.number.isRequired,\r\n\t\t}).isRequired,\r\n\t).isRequired,\r\n};\r\n\r\nexport default contactListTypes;\r\n","//Core\r\nimport axios from 'axios';\r\n//Redux\r\nimport contactsActions from '../contacts/contactsActions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:2000';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n\tdispatch(contactsActions.fetchContactsRequest());\r\n\r\n\taxios\r\n\t\t.get('/contacts')\r\n\t\t.then(({ data }) => dispatch(contactsActions.fetchContactsSuccess(data)))\r\n\t\t.catch(error => dispatch(contactsActions.fetchContactsFailure(error)));\r\n};\r\n\r\nconst addContacts = (name, number) => dispatch => {\r\n\tdispatch(contactsActions.addContactRequest());\r\n\r\n\taxios\r\n\t\t.post('/contacts', { name, number })\r\n\t\t.then(({ data }) => dispatch(contactsActions.addContactSuccess(data)))\r\n\t\t.catch(error => dispatch(contactsActions.addContactFailure(error)));\r\n};\r\n\r\nconst removeContact = id => dispatch => {\r\n\tdispatch(contactsActions.removeContactRequest());\r\n\r\n\taxios\r\n\t\t.delete(`/contacts/${id}`)\r\n\t\t.then(() => dispatch(contactsActions.removeContactSuccess(id)))\r\n\t\t.catch(error => dispatch(contactsActions.removeContactFailure(error)));\r\n};\r\n\r\nexport default {\r\n\tfetchContacts,\r\n\taddContacts,\r\n\tremoveContact,\r\n};\r\n","//Core\r\nimport PropTypes from 'prop-types';\r\n\r\nconst contactListItemTypes = {\r\n\tname: PropTypes.string.isRequired,\r\n\tnumber: PropTypes.number.isRequired,\r\n\tonRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default contactListItemTypes;\r\n","//Core\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n//Redux\r\nimport contactsOperations from 'redux/contacts/contactsOperations';\r\nimport contactsSelectors from 'redux/contacts/contactsSelectors';\r\n//Types\r\nimport contactListItemTypes from './ContactListItemTypes';\r\n//Styles\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ name, number, onRemove }) => (\r\n\t<li className={styles.listItem}>\r\n\t\t<p className={styles.contact}>\r\n\t\t\t<span>{name}:</span> {number}\r\n\t\t</p>\r\n\t\t<button type=\"button\" className={styles.button} onClick={onRemove}>\r\n\t\t\t&#10006;\r\n\t\t</button>\r\n\t</li>\r\n);\r\n\r\nContactListItem.propTypes = contactListItemTypes;\r\n\r\nconst mapStateToProps = (state, { id }) => ({\r\n\t...contactsSelectors.getContactById(state, id),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, { id }) => ({\r\n\tonRemove: () => dispatch(contactsOperations.removeContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n","//Core\r\nimport React from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\n//Redux\r\nimport contactsSelectors from 'redux/contacts/contactsSelectors';\r\n//Types\r\nimport contactListTypes from './ContactListTypes';\r\n//Components\r\nimport ContactListItem from '../ContactListItem';\r\n//Styles\r\nimport styles from './ContactList.module.css';\r\nimport fadeContactList from 'animation/fadeContactList.module.css';\r\n\r\nconst ContactList = ({ contacts }) =>\r\n\tcontacts.length > 0 && (\r\n\t\t<TransitionGroup component=\"ul\" className={styles.list}>\r\n\t\t\t{contacts.map(({ id }) => (\r\n\t\t\t\t<CSSTransition key={id} timeout={250} classNames={fadeContactList}>\r\n\t\t\t\t\t<ContactListItem key={id} id={id} />\r\n\t\t\t\t</CSSTransition>\r\n\t\t\t))}\r\n\t\t</TransitionGroup>\r\n\t);\r\n\r\nContactList.propTypes = contactListTypes;\r\n\r\nconst mapStateToProps = state => ({\r\n\tcontacts: contactsSelectors.getVisibleContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","//Core\r\nimport PropTypes from 'prop-types';\r\n\r\nconst contactFormTypes = {\r\n\tonAddContact: PropTypes.func.isRequired,\r\n\r\n\tcontacts: PropTypes.arrayOf(\r\n\t\tPropTypes.shape({\r\n\t\t\tid: PropTypes.number.isRequired,\r\n\t\t\tname: PropTypes.string.isRequired,\r\n\t\t\tnumber: PropTypes.number.isRequired,\r\n\t\t}).isRequired,\r\n\t).isRequired,\r\n};\r\n\r\nexport default contactFormTypes;\r\n","//Core\r\nimport React from 'react';\r\n//Styles\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = () => (\r\n\t<div className={styles.notificationWrapper}>\r\n\t\t<p className={styles.text}>Contact is already exists!</p>\r\n\t</div>\r\n);\r\n\r\nexport default Notification;\r\n","//Core\r\nimport React, { Component } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\n//Redux\r\nimport contactsOperations from 'redux/contacts/contactsOperations';\r\nimport contactsSelectors from 'redux/contacts/contactsSelectors';\r\n//Types\r\nimport contactFormTypes from './ContactFormTypes';\r\n//Components\r\nimport Notification from '../Notification';\r\n//Styles\r\nimport styles from './ContactForm.module.css';\r\nimport fadeNotification from 'animation/fadeNotification.module.css';\r\n\r\nexport class ContactForm extends Component {\r\n\tstatic propTypes = contactFormTypes;\r\n\r\n\tstate = {\r\n\t\tname: '',\r\n\t\tnumber: '',\r\n\t\tisNotice: false,\r\n\t};\r\n\r\n\tsetNotificationTimeout = delay =>\r\n\t\tsetTimeout(() => this.setState({ isNotice: false }), delay);\r\n\r\n\thandleChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n\thandleFormSubmit = e => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst isContactExists = this.props.contacts.find(\r\n\t\t\t({ name }) => name.toLowerCase() === this.state.name.toLowerCase(),\r\n\t\t);\r\n\r\n\t\tif (isContactExists) {\r\n\t\t\tthis.setState({ name: '', number: '', isNotice: true });\r\n\t\t\treturn this.setNotificationTimeout(1000);\r\n\t\t}\r\n\r\n\t\tthis.props.onAddContact(this.state.name, Number(this.state.number));\r\n\t\tthis.setState({ name: '', number: '' });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { name, number, isNotice } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<CSSTransition\r\n\t\t\t\t\tin={isNotice}\r\n\t\t\t\t\tclassNames={fadeNotification}\r\n\t\t\t\t\ttimeout={250}\r\n\t\t\t\t\tunmountOnExit\r\n\t\t\t\t>\r\n\t\t\t\t\t<Notification />\r\n\t\t\t\t</CSSTransition>\r\n\r\n\t\t\t\t<form className={styles.form} onSubmit={this.handleFormSubmit}>\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\tName\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName={styles.input}\r\n\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\tNumber\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName={styles.input}\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tname=\"number\"\r\n\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\tvalue={number}\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<button className={styles.button} type=\"submit\">\r\n\t\t\t\t\t\tAdd contact\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tcontacts: contactsSelectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n\tonAddContact: contactsOperations.addContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","//Core\r\nimport PropTypes from 'prop-types';\r\n\r\nconst appTypes = {\r\n\tonFetchContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default appTypes;\r\n","//Core\nimport React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\n//Components\nimport Filter from '../Filter';\nimport Heading from '../Heading';\nimport Section from '../Section';\nimport ContactList from '../ContactList';\nimport ContactForm from '../ContactForm';\n//Redux\nimport contactsOperations from 'redux/contacts/contactsOperations';\n//Types\nimport appTypes from './AppTypes';\n//Styles\nimport fadeFilter from 'animation/fadeFilter.module.css';\nimport fadeHeading from 'animation/fadeHeading.module.css';\n\nclass App extends Component {\n\tstatic propTypes = appTypes;\n\n\tcomponentDidMount() {\n\t\tthis.props.onFetchContacts();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Section>\n\t\t\t\t<CSSTransition in={true} classNames={fadeHeading} timeout={500} appear unmountOnExit>\n\t\t\t\t\t<Heading />\n\t\t\t\t</CSSTransition>\n\n\t\t\t\t<ContactForm />\n\n\t\t\t\t<CSSTransition in={true} classNames={fadeFilter} timeout={250} unmountOnExit>\n\t\t\t\t\t<Filter />\n\t\t\t\t</CSSTransition>\n\n\t\t\t\t<ContactList />\n\t\t\t</Section>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = {\n\tonFetchContacts: contactsOperations.fetchContacts,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","const fetchContacts = (state, { payload }) => payload;\r\nconst onAddContact = (state, { payload }) => [...state, payload];\r\nconst onRemoveContact = (state, { payload }) => state.filter(({ id }) => id !== payload);\r\nconst onChangeFilter = (state, { payload }) => payload;\r\n\r\nexport default {\r\n\tfetchContacts,\r\n\tonAddContact,\r\n\tonRemoveContact,\r\n\tonChangeFilter,\r\n};\r\n","//Core\r\nimport { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n//Redux\r\nimport contactsActions from './contactsActions';\r\nimport handleContactsReducer from './handleContactsReducer';\r\n\r\nconst items = createReducer([], {\r\n\t[contactsActions.fetchContactsSuccess]: handleContactsReducer.fetchContacts,\r\n\t[contactsActions.addContactSuccess]: handleContactsReducer.onAddContact,\r\n\t[contactsActions.removeContactSuccess]: handleContactsReducer.onRemoveContact,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n\t[contactsActions.changeFilter]: handleContactsReducer.onChangeFilter,\r\n});\r\n\r\nexport default combineReducers({\r\n\titems,\r\n\tfilter,\r\n});\r\n","//Core\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n//Redux\r\nimport contactsReducer from './contacts/contactsReducer';\r\n\r\nconst store = configureStore({\r\n\treducer: {\r\n\t\tcontacts: contactsReducer,\r\n\t},\r\n});\r\n\r\nexport default store;\r\n","//Core\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n//Components\nimport App from 'components/App';\n//Redux\nimport { Provider } from 'react-redux';\nimport store from 'redux/store';\n//Styles\nimport 'index.css';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root'),\n);\n"],"sourceRoot":""}